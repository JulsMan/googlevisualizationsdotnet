//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GoogleChartsNGraphsControls {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource1 {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource1() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GoogleChartsNGraphsControls.Resource1", typeof(Resource1).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to jx={getHTTPObject:function(){var A=false;if(typeof ActiveXObject!=&quot;undefined&quot;){try{A=new ActiveXObject(&quot;Msxml2.XMLHTTP&quot;)}catch(C){try{A=new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;)}catch(B){A=false}}}else{if(window.XMLHttpRequest){try{A=new XMLHttpRequest()}catch(C){A=false}}}return A},load:function(url,callback,format){var http=this.init();if(!http||!url){return }if(http.overrideMimeType){http.overrideMimeType(&quot;text/xml&quot;)}if(!format){var format=&quot;text&quot;}format=format.toLowerCase();var now=&quot;uid=&quot;+new Date().getTime [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jx {
            get {
                return ResourceManager.GetString("jx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ////**
        /// * Registered by GoogleVisualizationsDotNet to facilitate the reload() function 
        /// * for each control.  Reload will proxy this to this call with the control and container
        /// * data.  Do not call directly. 
        /// *
        /// * PLEASE READ:
        /// * When loading data from the data source, there will be a GET parameter in the request - tqx - with a value like: &quot;reqId:0&quot;. 
        /// * You must return the same reqId in your response.
        /// *
        /// */
        ///function m_JustDraw(container, chart, data){
        ///    var objAjaxCallback = new AjaxCallback [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SendAndDraw {
            get {
                return ResourceManager.GetString("SendAndDraw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to div.timeline-frame {
        ///    -moz-box-sizing: border-box;
        ///    border: 1px solid #bebebe;
        ///    box-sizing: border-box;
        ///    overflow: hidden;
        ///    position: relative;
        ///}
        ///
        ///div.timeline-content {
        ///    overflow: hidden;
        ///    position: relative;
        ///}
        ///
        ///div.timeline-axis {
        ///    -moz-box-sizing: border-box;
        ///    border-color: #bebebe;
        ///    border-top-style: solid;
        ///    border-width: 1px;
        ///    box-sizing: border-box;
        ///}
        ///
        ///div.timeline-axis-grid {
        ///    -moz-box-sizing: border-box;
        ///    border-left-style: solid;
        ///    border-width: 1px;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string timeline {
            get {
                return ResourceManager.GetString("timeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if (typeof links === &apos;undefined&apos;) {
        ///    links = {};
        ///    links.locales = {};
        ///} else if (typeof links.locales === &apos;undefined&apos;) {
        ///    links.locales = {};
        ///}
        ///
        ///// English ===================================================
        ///links.locales[&apos;en&apos;] = {
        ///    &apos;MONTHS&apos;: [&quot;January&quot;, &quot;February&quot;, &quot;March&quot;, &quot;April&quot;, &quot;May&quot;, &quot;June&quot;, &quot;July&quot;, &quot;August&quot;, &quot;September&quot;, &quot;October&quot;, &quot;November&quot;, &quot;December&quot;],
        ///    &apos;MONTHS_SHORT&apos;: [&quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;],
        ///    &apos;DAYS&apos;: [&quot;Sunday&quot;, &quot;Mon [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string timeline_locales {
            get {
                return ResourceManager.GetString("timeline_locales", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///
        /// Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not
        /// use this file except in compliance with the License. You may obtain a copy
        /// of the License at
        ///
        /// http://www.apache.org/licenses/LICENSE-2.0
        ///
        /// Unless required by applicable law or agreed to in writing, software
        /// distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT
        /// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
        /// License for the specific language governing permissions and limitations [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string timeline_min {
            get {
                return ResourceManager.GetString("timeline_min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to div.timeline-frame {
        ///    position: relative;
        ///    overflow: hidden;
        ///}
        ///
        ///div.timeline-content {
        ///    position: relative;
        ///    overflow: hidden;
        ///}
        ///
        ///div.timeline-axis {
        ///    filter: alpha(opacity = 60);
        ///    -khtml-opacity: 0.6;
        ///    -moz-opacity: 0.6;
        ///    opacity: 0.6;
        ///    border-width: 1px;
        ///    border-top-style: solid;
        ///}
        ///
        ///div.timeline-axis-grid {
        ///    border-left-style: solid;
        ///    border-width: 1px;
        ///}
        ///
        ///div.timeline-axis-grid-minor {
        ///    filter: alpha(opacity = 30);
        ///    -khtml-opacity: 0.3;
        ///    -moz-opacity: 0.3;
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string timeline_theme {
            get {
                return ResourceManager.GetString("timeline_theme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Visualization {
            get {
                object obj = ResourceManager.GetObject("Visualization", resourceCulture);
                return ((byte[])(obj));
            }
        }
    }
}
